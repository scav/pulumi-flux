// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export { DataInstallArgs, DataInstallResult, DataInstallOutputArgs } from "./dataInstall";
export const dataInstall: typeof import("./dataInstall").dataInstall = null as any;
export const dataInstallOutput: typeof import("./dataInstall").dataInstallOutput = null as any;
utilities.lazyLoad(exports, ["dataInstall","dataInstallOutput"], () => require("./dataInstall"));

export { DataSyncArgs, DataSyncResult, DataSyncOutputArgs } from "./dataSync";
export const dataSync: typeof import("./dataSync").dataSync = null as any;
export const dataSyncOutput: typeof import("./dataSync").dataSyncOutput = null as any;
utilities.lazyLoad(exports, ["dataSync","dataSyncOutput"], () => require("./dataSync"));

export { ProviderArgs } from "./provider";
export type Provider = import("./provider").Provider;
export const Provider: typeof import("./provider").Provider = null as any;
utilities.lazyLoad(exports, ["Provider"], () => require("./provider"));

pulumi.runtime.registerResourcePackage("flux", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:flux") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
